<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.UserMapper">

    <!--    开启二级缓存-->
    <cache></cache>

    <resultMap id="userMap" type="domain.User">
        <id column="id" property="id"></id>
        <result property="username" column="username"></result>
        <result property="password" column="password"></result>
        <result property="birthday" column="birthday"></result>
        <!--
            collection：一对多
            JavaType是用来指定pojo中属性的类型
            ofType指定的是 映射到list集合属性中pojo的类型
         -->
        <collection property="ordersList" ofType="domain.Orders">
            <id property="id" column="oid"></id>
            <result property="ordertime" column="ordertime"></result>
            <result property="total" column="total"></result>
            <result property="uid" column="uid"></result>
        </collection>
    </resultMap>

    <select id="findAllWithOrders" resultMap="userMap">
        SELECT u.*,o.id oid, o.ordertime, o.total, o.uid FROM orders o RIGHT JOIN USER u ON o.uid = u.id;
    </select>


    <resultMap id="userRoleMap" type="domain.User">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="password" column="password"></result>
        <result property="birthday" column="birthday"></result>

        <collection property="roleList" ofType="domain.Role">
            <id property="id" column="rid"></id>
            <result property="rolename" column="rolename"></result>
            <result property="roleDesc" column="roleDesc"></result>
        </collection>
    </resultMap>

    <select id="findAllWithRole" resultMap="userRoleMap">
        SELECT u.*,r.id rid,r.rolename,r.roleDesc FROM USER u LEFT JOIN sys_user_role ur ON ur.userid = u.id
	        LEFT JOIN sys_role r ON ur.roleid = r.id
    </select>

    <!--
        useCache="true"：当前statement使用二级缓存
    -->
    <select id="findById" resultType="domain.User" parameterType="int" useCache="true">
        select * from user where id = #{id}
    </select>

    <resultMap id="userOrderMap" type="domain.User">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="password" column="password"></result>
        <result property="birthday" column="birthday"></result>
        <!--
            fetchType="lazy" 延迟加载
            fetchType="eager" 立即加载
         -->
        <collection property="ordersList" ofType="domain.Orders" select="mapper.OrdersMapper.findByUid" column="id"
        >
        </collection>
    </resultMap>

    <!--    一对多嵌套查询 -->
    <select id="findAllWithOrders2" resultMap="userOrderMap">
        select * from user
    </select>


    <resultMap id="userRoleMap2" type="domain.User">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="password" column="password"></result>
        <result property="birthday" column="birthday"></result>
        <collection property="roleList" ofType="domain.Role" column="id" select="mapper.RoleMapper.findByUid">
        </collection>
    </resultMap>
    <select id="findAllWithRole2" resultMap="userRoleMap2">
        select * from user
    </select>


</mapper>